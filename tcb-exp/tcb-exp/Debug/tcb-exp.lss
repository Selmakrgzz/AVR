
tcb-exp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00804000  00804000  00000288  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000154  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00804000  00804000  00000288  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00000288  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 0000000e  00000000  00000000  000002b7  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000002c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003464  00000000  00000000  000002fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002b09  00000000  00000000  00003761  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000039b  00000000  00000000  0000626a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  00006608  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000133f  00000000  00000000  00006670  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000049  00000000  00000000  000079af  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000079f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  000001e6  000001e6  0000027a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00007a20  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.LED_setup 0000000c  000001ce  000001ce  00000262  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.TCB0_setup 00000016  000001a2  000001a2  00000236  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    0000000c  000001da  000001da  0000026e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_12 0000004e  00000154  00000154  000001e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_fini 00000002  000001ee  000001ee  00000282  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_funcs_on_exit 00000002  000001f0  000001f0  00000284  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_simulator_exit 00000002  000001f2  000001f2  00000286  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.exit    00000016  000001b8  000001b8  0000024c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text._Exit   00000004  000001ea  000001ea  0000027e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 77 00 	jmp	0xee	; 0xee <__ctors_end>
   4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
   8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
   c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  10:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  14:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  18:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  1c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  20:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  24:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  28:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  2c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  30:	0c 94 aa 00 	jmp	0x154	; 0x154 <_etext>
  34:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  38:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  3c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  40:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  44:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  48:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  4c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  50:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  54:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  58:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  5c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  60:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  64:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  68:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  6c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  70:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  74:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  78:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  7c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  80:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  84:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  88:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  8c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  90:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  94:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  98:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  9c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  a0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  a4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  a8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  ac:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  b0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  b4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  b8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  bc:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  c0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  c4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  c8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  cc:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  d0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  d4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  d8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  dc:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  e0:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  e4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>

000000e8 <.dinit>:
  e8:	40 00       	.word	0x0040	; ????
  ea:	40 02       	muls	r20, r16
  ec:	80 00       	.word	0x0080	; ????

000000ee <__ctors_end>:
  ee:	80 91 01 10 	lds	r24, 0x1001	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
  f2:	8f 7c       	andi	r24, 0xCF	; 207
  f4:	80 60       	ori	r24, 0x00	; 0
  f6:	80 68       	ori	r24, 0x80	; 128
  f8:	80 93 01 10 	sts	0x1001, r24	; 0x801001 <__TEXT_REGION_LENGTH__+0x7e1001>
  fc:	11 24       	eor	r1, r1
  fe:	1f be       	out	0x3f, r1	; 63
 100:	cf ef       	ldi	r28, 0xFF	; 255
 102:	cd bf       	out	0x3d, r28	; 61
 104:	df e7       	ldi	r29, 0x7F	; 127
 106:	de bf       	out	0x3e, r29	; 62

00000108 <__do_copy_data>:
 108:	e8 ee       	ldi	r30, 0xE8	; 232
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	40 e0       	ldi	r20, 0x00	; 0
 10e:	19 c0       	rjmp	.+50     	; 0x142 <__do_clear_bss+0x8>
 110:	b7 91       	elpm	r27, Z+
 112:	a7 91       	elpm	r26, Z+
 114:	37 91       	elpm	r19, Z+
 116:	27 91       	elpm	r18, Z+
 118:	07 91       	elpm	r16, Z+
 11a:	07 fd       	sbrc	r16, 7
 11c:	0e c0       	rjmp	.+28     	; 0x13a <__do_clear_bss>
 11e:	97 91       	elpm	r25, Z+
 120:	87 91       	elpm	r24, Z+
 122:	ef 01       	movw	r28, r30
 124:	f9 2f       	mov	r31, r25
 126:	e8 2f       	mov	r30, r24
 128:	0b bf       	out	0x3b, r16	; 59
 12a:	07 90       	elpm	r0, Z+
 12c:	0d 92       	st	X+, r0
 12e:	a2 17       	cp	r26, r18
 130:	b3 07       	cpc	r27, r19
 132:	d9 f7       	brne	.-10     	; 0x12a <__do_copy_data+0x22>
 134:	fe 01       	movw	r30, r28
 136:	1b be       	out	0x3b, r1	; 59
 138:	04 c0       	rjmp	.+8      	; 0x142 <__do_clear_bss+0x8>

0000013a <__do_clear_bss>:
 13a:	1d 92       	st	X+, r1
 13c:	a2 17       	cp	r26, r18
 13e:	b3 07       	cpc	r27, r19
 140:	e1 f7       	brne	.-8      	; 0x13a <__do_clear_bss>
 142:	ed 3e       	cpi	r30, 0xED	; 237
 144:	f4 07       	cpc	r31, r20
 146:	21 f7       	brne	.-56     	; 0x110 <__do_copy_data+0x8>
 148:	0e 94 ed 00 	call	0x1da	; 0x1da <main>
 14c:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <exit>

00000150 <_exit>:
 150:	f8 94       	cli

00000152 <__stop_program>:
 152:	ff cf       	rjmp	.-2      	; 0x152 <__stop_program>

Disassembly of section .text:

000001e6 <__bad_interrupt>:
 1e6:	0c 94 00 00 	jmp	0	; 0x0 <__FLMAP_SECTION0__>

Disassembly of section .text.LED_setup:

000001ce <LED_setup>:

// Forteller kompileren at den ikke skal overse. RESPECT!
volatile uint16_t counter;

void LED_setup(){
	PORTC.DIRSET = PIN6_bm;
 1ce:	e0 e4       	ldi	r30, 0x40	; 64
 1d0:	f4 e0       	ldi	r31, 0x04	; 4
 1d2:	80 e4       	ldi	r24, 0x40	; 64
 1d4:	81 83       	std	Z+1, r24	; 0x01
	PORTC.OUTSET = PIN6_bm;
 1d6:	85 83       	std	Z+5, r24	; 0x05
 1d8:	08 95       	ret

Disassembly of section .text.TCB0_setup:

000001a2 <TCB0_setup>:
}

void TCB0_setup(){
	// Capture/Compare register value
	TCB0.CCMP = 50000; //Klokkesyklusen. Skjer hver 0.025 sekund
 1a2:	e0 e0       	ldi	r30, 0x00	; 0
 1a4:	fb e0       	ldi	r31, 0x0B	; 11
 1a6:	80 e5       	ldi	r24, 0x50	; 80
 1a8:	93 ec       	ldi	r25, 0xC3	; 195
 1aa:	84 87       	std	Z+12, r24	; 0x0c
 1ac:	95 87       	std	Z+13, r25	; 0x0d
	TCB0.CTRLB = TCB_CNTMODE_INT_gc;
 1ae:	11 82       	std	Z+1, r1	; 0x01
	TCB0.INTCTRL = TCB_CAPT_bm; //Skrudd på interrupt
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	85 83       	std	Z+5, r24	; 0x05
	TCB0.CTRLA = TCB_CLKSEL_DIV1_gc | TCB_ENABLE_bm;
 1b4:	80 83       	st	Z, r24
 1b6:	08 95       	ret

Disassembly of section .text.main:

000001da <main>:

//Interrupt funker gjennom ISR
int main(void)
{
	
	LED_setup();
 1da:	0e 94 e7 00 	call	0x1ce	; 0x1ce <LED_setup>
	TCB0_setup();
 1de:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <TCB0_setup>
	sei(); //Set interrupt 
 1e2:	78 94       	sei
 1e4:	ff cf       	rjmp	.-2      	; 0x1e4 <main+0xa>

Disassembly of section .text.__vector_12:

00000154 <__vector_12>:
		
		
    }
}

ISR(TCB0_INT_vect){
 154:	1f 92       	push	r1
 156:	0f 92       	push	r0
 158:	0f b6       	in	r0, 0x3f	; 63
 15a:	0f 92       	push	r0
 15c:	11 24       	eor	r1, r1
 15e:	8f 93       	push	r24
 160:	9f 93       	push	r25
	// 2 000 000 / 50 000 = 40
	//Vi vil at lyset skal lyse hver sekund. Derfor teller vi antall ganger interrupt skjer i counter,
	//Hvis den er lik 40, så har det gått 1 sek, og da lyser LEDen
	if (counter == 40){
 162:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 166:	90 91 01 40 	lds	r25, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 16a:	88 97       	sbiw	r24, 0x28	; 40
 16c:	39 f4       	brne	.+14     	; 0x17c <__vector_12+0x28>
		//Slår av og på LED-lyset (toggle)
		PORTC.OUTTGL = PIN6_bm;
 16e:	80 e4       	ldi	r24, 0x40	; 64
 170:	80 93 47 04 	sts	0x0447, r24	; 0x800447 <__TEXT_REGION_LENGTH__+0x7e0447>
		counter = 0; //Husk å resette counter for hver gang
 174:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
 178:	10 92 01 40 	sts	0x4001, r1	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
	}
	
	//Når en interrupt skjer, så settes et interrupt-flag i TCB0 sin interrupt-flags register
	TCB0.INTFLAGS  = TCB_CAPT_bm;
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
	
	//Teller antall ganger interrupt oppstår
	counter++;
 182:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
 186:	90 91 01 40 	lds	r25, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 18a:	01 96       	adiw	r24, 0x01	; 1
 18c:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
 190:	90 93 01 40 	sts	0x4001, r25	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	0f 90       	pop	r0
 19a:	0f be       	out	0x3f, r0	; 63
 19c:	0f 90       	pop	r0
 19e:	1f 90       	pop	r1
 1a0:	18 95       	reti

Disassembly of section .text.__dummy_fini:

000001ee <_fini>:
 1ee:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000001f0 <__funcs_on_exit>:
 1f0:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000001f2 <__simulator_exit>:
 1f2:	08 95       	ret

Disassembly of section .text.exit:

000001b8 <exit>:
 1b8:	ec 01       	movw	r28, r24
 1ba:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <__funcs_on_exit>
 1be:	0e 94 f7 00 	call	0x1ee	; 0x1ee <_fini>
 1c2:	ce 01       	movw	r24, r28
 1c4:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <__simulator_exit>
 1c8:	ce 01       	movw	r24, r28
 1ca:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_Exit>

Disassembly of section .text._Exit:

000001ea <_Exit>:
 1ea:	0e 94 a8 00 	call	0x150	; 0x150 <_exit>
